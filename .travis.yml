#
# Travis CI configuration file
#

# Based mostly upon https://github.com/BurntSushi/ripgrep/blob/master/.travis.yml

language: rust

env:
  global:
    - PROJECT_NAME=gisht
    - LINUX_TARGET=x86_64-unknown-linux-gnu
    - OSX_TARGET=x86_64-apple-darwin

os:
  - linux
rust:
  - stable
  - beta
  - nightly

matrix:
  include:
    - os: osx
      language: generic
  # Test on nightly Rust, but failures there won't break the build.
  allow_failures:
    - rust: nightly


#
# Dependencies
#

# Linux
addons:
  apt:
    sources:
      - kalakris-cmake
    packages:
      - cmake

# OSX
before_install: |
  if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
    # (openssl incantations taken from https://github.com/sfackler/rust-openssl/issues/255)
    brew update
    brew install openssl
    export OPENSSL_INCLUDE_DIR=`brew --prefix openssl`/include
    export OPENSSL_LIB_DIR=`brew --prefix openssl`/lib
    export DEP_OPENSSL_INCLUDE=`brew --prefix openssl`/include

    # Install latest stable Rust via rustup.
    # (Taken from Travis own build logs for os:osx/language:rust)
    curl -sL https://static.rust-lang.org/rustup.sh -o ~/rust-installer/rustup.sh
    sh ~/rust-installer/rustup.sh --prefix=~/rust --spec=stable -y --disable-sudo 2> /dev/null
    export PATH=$PATH:~/rust/bin
    rustc --version
    cargo --version

    # Also on OSX, manually install Python
    # and prepare virtualenv for Invoke tasks' dependencies.
    # (This has to be done in install: section as per this comment:
    #  https://github.com/travis-ci/travis-ci/issues/2312#issuecomment-247206351)
    brew update
    brew install python
    virtualenv $TRAVIS_BUILD_DIR/.venv
    source $TRAVIS_BUILD_DIR/.venv/bin/activate
  fi

#
# Test script
#

install: |
  if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
    pip install -r requirements-dev.txt
  else
    pip install --user -r requirements-dev.txt
  fi

before_script:
  # Specify the exact Rust build target.
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]];  then TARGET="$LINUX_TARGET" ; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]];    then TARGET="$OSX_TARGET"   ; fi

script: inv test
